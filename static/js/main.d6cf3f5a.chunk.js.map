{"version":3,"sources":["components/Modal/Modal.js","components/Button/Button.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","services/searchApi.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","onClose","image","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","className","onClick","currentTarget","target","src","alt","Button","ImageGalleryItem","webformatURL","largeImageURL","memo","ImageGallery","images","map","shortid","generate","Searchbar","onSubmit","value","onChange","type","name","autoComplete","autoFocus","placeholder","searchApi","searchQuery","searchPage","axios","get","then","response","data","hits","length","Promise","reject","Error","App","useState","setImages","setSearchQuery","setSearchPage","isLoaderOn","setIsLoaderOn","isModalOpen","setIsModalOpen","modalImage","setModalImage","scrollTo","top","document","documentElement","scrollHeight","behavior","searchSubmit","a","preventDefault","catch","error","toast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","loadMore","openModal","nodeName","dataset","toggleModal","color","height","width","newestOnTop","rtl","pauseOnFocusLoss","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+UAsCeA,EAnCD,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACxBC,qBAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWC,GAE5B,WACLF,OAAOG,oBAAoB,UAAWD,OAI1C,IAAMA,EAAgB,SAACE,GACN,WAAXA,EAAEC,MACJR,KAUJ,OACE,qBAAKS,UAAU,UAAUC,QAPC,SAACH,GACvBA,EAAEI,gBAAkBJ,EAAEK,QACxBZ,KAKF,SACE,qBAAKS,UAAU,QAAf,SACE,qBAAKI,IAAKZ,EAAOa,IAAI,UCddC,EAVA,SAAC,GAAD,IAAGL,EAAH,EAAGA,QAAH,OACb,wBAAQD,UAAU,SAASC,QAASA,EAApC,wB,iBCDIM,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACvB,oBAAIT,UAAU,mBAAd,SACE,qBACEI,IAAKI,EACLH,IAAI,GACJ,aAAYI,EACZT,UAAU,8BAUDU,iBAAKH,GCILI,EAjBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQX,EAAX,EAAWA,QAAX,OACnB,oBAAID,UAAU,eAAeC,QAASA,EAAtC,SACGW,EAAOC,KAAI,gBAAGL,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACV,cAAC,EAAD,CACED,aAAcA,EACdC,cAAeA,GACVK,IAAQC,kBCkBNC,EA3BG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,SAApB,OAChB,wBAAQnB,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaiB,SAAUA,EAAvC,UACE,wBAAQG,KAAK,SAASpB,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVqB,KAAK,cACLH,MAAOA,EACPC,SAAUA,EACVC,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,mC,iBCbL,SAASC,EAAUC,EAAaC,GAC7C,OAAOC,IACJC,IADI,UAJQ,2BAIR,sDAEsDH,EAFtD,iBAE0EC,EAF1E,4BAHO,uCAOXG,MAAK,SAACC,GACL,OAAIA,EAASC,KAAKC,KAAKC,OAAS,EACvBH,EAASC,KAAKC,KAGhBE,QAAQC,OAAO,IAAIC,MAAM,sBCFtC,IA6HeC,EA7HH,WACV,MAA4BC,mBAAS,IAArC,mBAAO3B,EAAP,KAAe4B,EAAf,KACA,EAAsCD,mBAAS,IAA/C,mBAAOb,EAAP,KAAoBe,EAApB,KACA,EAAoCF,mBAAS,GAA7C,mBAAOZ,EAAP,KAAmBe,EAAnB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAsCL,oBAAS,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KACA,EAAoCP,mBAAS,IAA7C,mBAAOQ,EAAP,KAAmBC,EAAnB,KAEAvD,qBAAU,WACJmB,EAAOsB,OAAS,IAClBxC,OAAOuD,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,aAGb,CAAC1C,IAEJ,IAAM2C,EAAY,uCAAG,WAAOzD,GAAP,SAAA0D,EAAA,yDACnB1D,EAAE2D,iBAEG/B,EAHc,wDAOnBkB,GAAc,GAPK,SASbnB,EAAUC,EAAaC,GAC1BG,MAAK,SAACE,GACLQ,EAAUR,GACVU,EAAc,MAEfgB,OAAM,SAACC,GACNC,IAAMD,MAAN,UAAeA,EAAME,SAAW,CAC9BC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,OAtBG,OA0BnBzB,GAAc,GA1BK,2CAAH,sDA6BZ0B,EAAQ,uCAAG,sBAAAd,EAAA,6DACfZ,GAAc,GADC,SAGTnB,EAAUC,EAAaC,GAAYG,MAAK,SAACE,GAAD,OAC5CQ,EAAU,GAAD,mBAAK5B,GAAL,YAAgBoB,QAJZ,OAOfY,GAAc,GAPC,2CAAH,qDAUdnD,qBAAU,WACJkC,EAAa,GACf2C,MAGD,CAAC3C,IAEJ,IAMM4C,EAAS,uCAAG,6BAAAf,EAAA,yDACQ,SADCrD,EAAT,EAASA,QACdqE,SADK,iEAKVxB,EAAc7C,EAAOsE,QAAQjF,OALnB,OAMhBkF,IANgB,2CAAH,sDAaTA,EAAc,WAClB5B,GAAgBD,IAGlB,OACE,sBAAK7C,UAAU,MAAf,UACE,cAAC,EAAD,CACEiB,SAAUsC,EACVrC,MAAOQ,EACPP,SA5Bc,SAAC,GAAgB,IAC3BD,EAD0B,EAAbf,OACbe,MAERuB,EAAevB,MA4Bb,cAAC,EAAD,CAAcjB,QAASsE,EAAW3D,OAAQA,IAEzC+B,GACC,cAAC,IAAD,CAAQvB,KAAK,OAAOuD,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAGxDjE,EAAOsB,OAAS,IAAMS,GACrB,cAAC,EAAD,CAAQ1C,QAAS,kBAAMyC,EAAcf,EAAa,MAGnDkB,GACC,cAAC,EAAD,CAAOrD,MAAOuD,EAAYxD,QA3Bb,WACjBuD,GAAe,IA0BX,SACE,qBAAK1C,IAAK2C,EAAY1C,IAAI,gBAI9B,cAAC,IAAD,CACEyD,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBc,aAAa,EACbb,cAAY,EACZc,KAAK,EACLC,kBAAgB,EAChBb,WAAS,EACTD,cAAY,QCxHLe,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxC,SAASyC,eAAe,SAM1BX,M","file":"static/js/main.d6cf3f5a.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Modal = ({ onClose, image }) => {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return function cleanup() {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={image} alt=\"\" />\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  image: PropTypes.string.isRequired,\n};\n\nexport default Modal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ onClick }) => (\n  <button className=\"Button\" onClick={onClick}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { memo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGalleryItem = ({ webformatURL, largeImageURL }) => (\n  <li className=\"ImageGalleryItem\">\n    <img\n      src={webformatURL}\n      alt=\"\"\n      data-image={largeImageURL}\n      className=\"ImageGalleryItem-image\"\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default memo(ImageGalleryItem);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\n\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\n\nconst ImageGallery = ({ images, onClick }) => (\n  <ul className=\"ImageGallery\" onClick={onClick}>\n    {images.map(({ webformatURL, largeImageURL }) => (\n      <ImageGalleryItem\n        webformatURL={webformatURL}\n        largeImageURL={largeImageURL}\n        key={shortid.generate()}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default ImageGallery;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Searchbar = ({ onSubmit, value, onChange }) => (\n  <header className=\"Searchbar\">\n    <form className=\"SearchForm\" onSubmit={onSubmit}>\n      <button type=\"submit\" className=\"SearchForm-button\">\n        <span className=\"SearchForm-button-label\">Search</span>\n      </button>\n\n      <input\n        className=\"SearchForm-input\"\n        name=\"searchInput\"\n        value={value}\n        onChange={onChange}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search images and photos\"\n      />\n    </form>\n  </header>\n);\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"21932135-4f5d77beca28a3dee23c5711e\";\n\nexport default function searchApi(searchQuery, searchPage) {\n  return axios\n    .get(\n      `${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${searchPage}&per_page=12&key=${API_KEY}`\n    )\n    .then((response) => {\n      if (response.data.hits.length > 0) {\n        return response.data.hits;\n      }\n\n      return Promise.reject(new Error(\"No match found\"));\n    });\n}\n","import React, { useState, useEffect } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./App.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Modal from \"./components/Modal/Modal\";\nimport Button from \"./components/Button/Button\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport searchApi from \"./services/searchApi\";\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchPage, setSearchPage] = useState(1);\n  const [isLoaderOn, setIsLoaderOn] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalImage, setModalImage] = useState(\"\");\n\n  useEffect(() => {\n    if (images.length > 12) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }, [images]);\n\n  const searchSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!searchQuery) {\n      return;\n    }\n\n    setIsLoaderOn(true);\n\n    await searchApi(searchQuery, searchPage)\n      .then((data) => {\n        setImages(data);\n        setSearchPage(1);\n      })\n      .catch((error) => {\n        toast.error(`${error.message}`, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      });\n\n    setIsLoaderOn(false);\n  };\n\n  const loadMore = async () => {\n    setIsLoaderOn(true);\n\n    await searchApi(searchQuery, searchPage).then((data) =>\n      setImages([...images, ...data])\n    );\n\n    setIsLoaderOn(false);\n  };\n\n  useEffect(() => {\n    if (searchPage > 1) {\n      loadMore();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchPage]);\n\n  const inputChange = ({ target }) => {\n    const { value } = target;\n\n    setSearchQuery(value);\n  };\n\n  const openModal = async ({ target }) => {\n    if (target.nodeName !== \"IMG\") {\n      return;\n    }\n\n    await setModalImage(target.dataset.image);\n    toggleModal();\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar\n        onSubmit={searchSubmit}\n        value={searchQuery}\n        onChange={inputChange}\n      />\n\n      <ImageGallery onClick={openModal} images={images} />\n\n      {isLoaderOn && (\n        <Loader type=\"Oval\" color=\"#3f51b5\" height={40} width={40} />\n      )}\n\n      {images.length > 0 && !isLoaderOn && (\n        <Button onClick={() => setSearchPage(searchPage + 1)} />\n      )}\n\n      {isModalOpen && (\n        <Modal image={modalImage} onClose={closeModal}>\n          <img src={modalImage} alt=\"Modal IMG\" />\n        </Modal>\n      )}\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}